<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" id="WebApp_ID" version="2.5">
  <display-name>Jelly-Help</display-name>
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>
  <!-- Proxool Admin -->
	<servlet>
		<servlet-name>dbpoolAdmin</servlet-name>
		<servlet-class>
			org.logicalcobwebs.proxool.admin.servlet.AdminServlet
		</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>dbpoolAdmin</servlet-name>
		<url-pattern>/dbpool</url-pattern>
	</servlet-mapping>
	<!--自动加载的类-->
	<servlet>
		<servlet-name>action</servlet-name>
		<servlet-class>
            com.redm.service.system.redmStart
		</servlet-class>
		<load-on-startup>2</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>action</servlet-name>
		<url-pattern>/do</url-pattern>
	</servlet-mapping>    
	<!-- 配置受保护域，只有Tomcat管理员才能察看连接池的信息 -->   
	<security-constraint>
		<web-resource-collection>
			<web-resource-name>proxool</web-resource-name>
			<url-pattern>/dbpool</url-pattern>
		</web-resource-collection>
		<auth-constraint>
			<role-name>manager</role-name>
		</auth-constraint>
	</security-constraint>
	<login-config>
		<auth-method>BASIC</auth-method>
		<realm-name>proxool manager Application</realm-name>
	</login-config>
	<security-role>
		<description>
			The role that is required to log in to the Manager
			Application
		</description>
		<role-name>manager</role-name>
	</security-role>
	<error-page>
		<error-code>401</error-code>
		<location>/no-role.jsp</location>
	</error-page>
  <!-- Spring ApplicationContext配置文件的路径,可使用通配符,多个路径用,号分隔
		此参数用于后面的Spring Context Loader -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:applicationContext.xml</param-value>
	</context-param>
	<!-- Filter 定义  -->
	<!-- Character Encoding filter -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>

	<!-- Hibernate Open Session In View filter-->
	<filter>
		<filter-name>hibernateOpenSessionInViewFilter</filter-name>
		<filter-class>org.springframework.orm.hibernate3.support.OpenSessionInViewFilter</filter-class>
		<init-param>
			<param-name>singleSession</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>


	<!-- Struts2 filter -->
	<filter>
		<filter-name>struts2CleanUpFilter</filter-name>
		<filter-class>org.apache.struts2.dispatcher.ActionContextCleanUp</filter-class>
	</filter>

	<filter>
		<filter-name>struts2Filter</filter-name>
		<filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
	</filter>

	<!-- Filter 映射 -->
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>hibernateOpenSessionInViewFilter</filter-name>
		<url-pattern>*.action</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>struts2CleanUpFilter</filter-name>
		<url-pattern>*.action</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>struts2Filter</filter-name>
		<url-pattern>*.action</url-pattern>
	</filter-mapping>
	<!--Spring的ApplicationContext 载入 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<!-- Spring 刷新Introspector防止内存泄露 -->
	<listener>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>
	<!-- 服务启动时加载的类 -->
	<!-- <listener> 
        <listener-class>com.jelly.help.commons.listener.StartupListener</listener-class> 
    </listener>  
    
    <listener> 
        <listener-class>com.redm.startup.StartupListener</listener-class> 
    </listener> -->

    
    <listener> 
    	<listener-class>com.jelly.help.commons.listener.SessionListener</listener-class> 
    </listener>
	<!-- session超时定义,单位为分钟 -->
	<session-config>
		<session-timeout>5</session-timeout>
	</session-config>
	<!-- 自定义错误页面 -->
	<error-page>
	 	<error-code>404</error-code>
	 	<location>/index.html</location>
	</error-page>
	<error-page>
	 	<error-code>500</error-code>
	 	<location>/index.html</location>
	</error-page>
	<error-page>
	 	<error-code>503</error-code>
	 	<location>/index.html</location>
	</error-page>
</web-app>